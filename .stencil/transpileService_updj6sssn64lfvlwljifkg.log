{"moduleFile":{"sourceFilePath":"D:/Development/Labs/Ettiene/polaris/src/services/workflow.service.ts","jsFilePath":"D:/Development/Labs/Ettiene/polaris/src/services/workflow.service.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["D:/Development/Labs/Ettiene/polaris/src/activities/activity-factory"],"originalCollectionComponentPath":null,"originalImports":["../activities/activity-factory"],"potentialCmpRefs":[]},"jsText":"import { ActivityFactory } from \"../activities/activity-factory\";\r\nexport class WorkflowService {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n    }\r\n    async setProcess(process, next = \"start\") {\r\n        try {\r\n            if (typeof process === \"string\")\r\n                process = await this.ctx.http.fetch({ url: `/wf/${process}`, method: 'get' });\r\n            this.process = process;\r\n            await this.goto(next);\r\n        }\r\n        catch (ex) {\r\n            console.error(ex);\r\n        }\r\n    }\r\n    async goto(name) {\r\n        if (!this.process || !this.process.activities)\r\n            return;\r\n        const actDef = this.process\r\n            .activities\r\n            .find(a => a.name == name);\r\n        return ActivityFactory.create(actDef, this.ctx)\r\n            .execute();\r\n    }\r\n}\r\n"}