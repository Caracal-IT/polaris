import { registerInstance as __stencil_registerInstance, getElement as __stencil_getElement } from "@stencil/core";
import { h } from "@stencil/core";
import { HttpService } from "../../services/http.service";
import { ModelService } from "../../services/model.service";
import { ConfigService } from "../../services/config.service";
import { WorkflowService } from "../../services/workflow.service";
export const PolarisWorkflow = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.components = [];
        this.page = this;
        this.model = new ModelService();
        this.http = new HttpService(this);
        this.config = new ConfigService();
        this.wf = new WorkflowService(this);
    }
    processChangeHandler() {
        console.log("ERROR");
        //   this.render2();
    }
    componentsChangeHandler() {
        // this.render2();
    }
    //load(process: any, next = "start"){
    //  this.wf.setProcess(process, next);       
    // }
    render() {
        return h("div", null, "Testing 2");
    }
    get el() { return __stencil_getElement(this); }
    static get watchers() { return {
        "process": ["processChangeHandler"],
        "components": ["componentsChangeHandler"]
    }; }
};
