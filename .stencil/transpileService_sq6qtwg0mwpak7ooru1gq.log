{"moduleFile":{"sourceFilePath":"D:/Development/Labs/Ettiene/polaris/src/services/http.service.ts","jsFilePath":"D:/Development/Labs/Ettiene/polaris/src/services/http.service.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"export class HttpService {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n    }\r\n    async fetch(endpoint) {\r\n        const response = await fetch(this.resolveSetting(endpoint.url), this.getConfig(endpoint));\r\n        return response.json();\r\n    }\r\n    getConfig(endpoint) {\r\n        return {\r\n            method: endpoint.method,\r\n            mode: 'cors',\r\n            headers: Object.apply({ \"Content-Type\": \"application/json\" }, endpoint.headers),\r\n            redirect: 'follow',\r\n            referrer: 'no-referrer',\r\n            body: endpoint.body ? JSON.stringify(endpoint.body) : null\r\n        };\r\n    }\r\n    resolveSetting(val) {\r\n        const matches = val.match(/\\[[\\w|_]+\\]/g);\r\n        if (!matches)\r\n            return val;\r\n        return matches.reduce((prev, next) => prev.replace(next, this.ctx.config.getSetting(next)), val);\r\n    }\r\n}\r\n"}