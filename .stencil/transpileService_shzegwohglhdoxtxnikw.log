{"moduleFile":{"sourceFilePath":"D:/Development/Labs/Ettiene/polaris/src/components/polaris-workflow/polaris-workflow.tsx","jsFilePath":"D:/Development/Labs/Ettiene/polaris/src/components/polaris-workflow/polaris-workflow.js","cmps":[{"isLegacy":false,"tagName":"polaris-workflow","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"PolarisWorkflow","elementRef":"el","encapsulation":"none","shadowDelegatesFocus":null,"properties":[{"name":"tag","type":"string","attribute":"tag","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"ctx","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"Context","resolved":"Context","references":{"Context":{"location":"import","path":"../../model/context.model"}}},"docs":{"tags":[],"text":""},"internal":false},{"name":"value","type":"any","attribute":"value","reflect":false,"mutable":false,"required":false,"optional":true,"complexType":{"original":"any","resolved":"any","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"process","type":"string","attribute":"process","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string|object","resolved":"object | string","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[{"propName":"process","methodName":"processChangeHandler"}],"styles":[],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"D:/Development/Labs/Ettiene/polaris/src/components/polaris-workflow/polaris-workflow.js","sourceFilePath":"D:/Development/Labs/Ettiene/polaris/src/components/polaris-workflow/polaris-workflow.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":true,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":false,"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":true,"isPlain":false,"htmlAttrNames":[],"htmlTagNames":[],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["D:/Development/Labs/Ettiene/polaris/src/services/http.service","D:/Development/Labs/Ettiene/polaris/src/services/model.service","D:/Development/Labs/Ettiene/polaris/src/services/config.service","D:/Development/Labs/Ettiene/polaris/src/services/workflow.service"],"originalCollectionComponentPath":null,"originalImports":["../../services/http.service","../../services/model.service","../../services/config.service","../../services/workflow.service"],"potentialCmpRefs":[]},"jsText":"import { HttpService } from \"../../services/http.service\";\r\nimport { ModelService } from \"../../services/model.service\";\r\nimport { ConfigService } from \"../../services/config.service\";\r\nimport { WorkflowService } from \"../../services/workflow.service\";\r\nexport class PolarisWorkflow {\r\n    constructor() {\r\n        this.page = this;\r\n        this.model = new ModelService();\r\n        this.http = new HttpService(this);\r\n        this.config = new ConfigService();\r\n        this.wf = new WorkflowService(this);\r\n        this._components = [];\r\n    }\r\n    processChangeHandler() {\r\n        console.log(\"Process Change\");\r\n        this.render();\r\n    }\r\n    get components() { return this._components; }\r\n    set components(val) { this._components = val; this.render(); }\r\n    load(process, next = \"start\") {\r\n        this.wf.setProcess(process, next);\r\n    }\r\n    render() {\r\n        console.log(this.process);\r\n        for (let i = this.el.childNodes.length - 1; i >= 0; i--)\r\n            this.el.removeChild(this.el.childNodes[i]);\r\n        this.components.forEach(this.renderComponent.bind(this, this));\r\n    }\r\n    renderComponent(parent, config) {\r\n        const el = document.createElement(config.tag);\r\n        const options = {\r\n            \"wf-Workflow\": \"\",\r\n            \"ctx\": this\r\n        };\r\n        const newEl = Object.assign(el, config, options);\r\n        if (newEl.id && newEl.value !== undefined) {\r\n            const newValue = this.model.getValue(newEl.id);\r\n            if (newValue !== undefined)\r\n                newEl.value = newValue;\r\n            this.model.setValue(newEl.id, newEl.value);\r\n            newEl.onchange = (event) => this.model.setValue(event.target.id, event.target.value);\r\n        }\r\n        if (config.controls)\r\n            config.controls.forEach(this.renderComponent.bind(this, newEl));\r\n        parent.appendChild(newEl);\r\n    }\r\n    static get is() { return \"polaris-workflow\"; }\r\n    static get properties() { return {\r\n        \"tag\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"tag\",\r\n            \"reflect\": false\r\n        },\r\n        \"ctx\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"Context\",\r\n                \"resolved\": \"Context\",\r\n                \"references\": {\r\n                    \"Context\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../model/context.model\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"value\": {\r\n            \"type\": \"any\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"value\",\r\n            \"reflect\": false\r\n        },\r\n        \"process\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string|object\",\r\n                \"resolved\": \"object | string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"process\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"process\",\r\n            \"methodName\": \"processChangeHandler\"\r\n        }]; }\r\n}\r\n"}