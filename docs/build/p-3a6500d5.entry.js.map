{"version":3,"sources":["src/services/analytics.service.ts","src/components/polaris-analytics/polaris-analytics.tsx","src/services/http.service.ts","src/pipes/currency-format.pipe.ts","src/pipes/factory.pipe.ts","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/v4.js","src/services/model.service.ts","src/services/config.service.ts","src/activities/base.activity.ts","src/activities/redirect.activity.ts","src/activities/finish.activity.ts","src/activities/ipc.activity.ts","src/activities/code.activity.ts","src/activities/page.activity.ts","src/activities/null.activity.ts","src/activities/api.activity.ts","src/activities/assign.activity.ts","src/activities/decision.activity.ts","src/activities/switch.activity.ts","src/activities/activity-factory.ts","src/services/workflow.service.ts","src/validators/validator.ts","src/validators/required.validator.ts","src/validators/regex.validator.ts","src/validators/range.validator.ts","src/services/validator.service.ts","src/utilities/page-builder.utility.ts","src/utilities/workflow-loader.utility.ts","src/components/polaris-workflow/polaris-workflow.tsx"],"names":["AnalyticsService","[object Object]","event","this","sendPostMessage","actType","path","wfElement","find","i","undefined","payload","createPayload","type","process","activity","control","valueHash","wfPath","map","getName","composedPath","message","msg","timestamp","Date","now","console","log","window","postMessage","item","id","page","name","notFound","p","filter","nodeName","indexOf","wfPage","localName","wfPageElement","ctx","wf","slice","act","getHashCode","str","startIndex","hashLength","hash","length","Math","imul","charCodeAt","PolarisAnalytics","analyticsService","getPath","lastPath","addEventListener","onBlur","send","sendMessage","target","removeEventListener","HttpService","settingOffset","clientError","unAuthorizedError","endpoint","response","fetch","resolveSetting","url","getConfig","status","error","json","metadata","code","statusText","setTimeout","config","method","mode","headers","Object","apply","Content-Type","redirect","referrer","body","JSON","stringify","val","counter","matches","match","result","reduce","replace","bind","prev","next","replacement","getSetting","currencyFormat","value","locale","currency","formatter","Intl","NumberFormat","style","format","PipeFactory","getRandomValues","rnds8","Uint8Array","rng","crypto","Error","byteToHex","push","toString","unsafeStringify","arr","offset","toLowerCase","randomUUID","native","v4","options","buf","rnds","random","ModelService","model","sessionId","uuidv4","replaceAll","pipes","key","split","total","currentElement","myRegexp","curr","addSetting","merge","sessionStorage","setItem","getItem","clearCache","parse","clear","newModel","current","index","padding","firstIndex","secondIndex","expr","substring","values","params","newValue","getValue","ConfigService","settings","setting","BaseActivity","goto","RedirectActivity","save","_a","location","href","FinishActivity","stack","gotoNext","ipc","pop","setProcess","IPCActivity","getInterpolatedValue","CodeActivity","evaluate","expression","f","Function","PageActivity","controls","NullActivity","Promise","_resolve","reject","ApiActivity","callEndpoints","endpoints","getBody","callEndpoint","http","then","data","setModel","hasModel","toUpperCase","mappings","m","direction","forEach","assign","remote","client","keys","k","setValue","AssignActivity","DecisionActivity","exp","trueAction","falseAction","SwitchActivity","rules","rule","ActivityFactory","activities","a","deleteCount","findIndex","splice","WorkflowService","clearStack","loader","load","err","description","tryNext","isValidProcess","validator","validate","newActivity","create","execute","Validator","errorMessage","el","setAttribute","nextSibling","textContent","RequiredValidator","context","isEmpty","super","setError","RegexValidator","regex","RegExp","exec","isValid","RangeValidator","min","max","ValidatorService","validators","ctrl","validateControl","v","sendErrorMsg","PageBuilder","parent","onInput","clearPage","addComponent","childNodes","removeChild","newEl","tag","createWorkflowElement","createElement","appendChild","addErrorLabel","document","setServices","wf-Workflow","bindCaption","oninput","interpolate","prop","errLabel","parentNode","HttpWorkflowLoader","processName","PolarisWorkflow","hostRef","_components","_render","add","resolve","addValidator","metaData","_b","activityType","_c","_isConnected","wfMessage","emit","_loader","hasAttribute","builder","build"],"mappings":"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","sourcesContent":["export class AnalyticsService {\n    sendMessage(event: object) {\n        this.sendPostMessage(event[\"detail\"]);\n    }\n\n    send(actType: string, path: HTMLElement[]) {\n        const wfElement = path.find(i => i[\"wf-Workflow\"] !== undefined);\n        \n        if(!wfElement)\n            return;\n\n        const payload = this.createPayload(actType, wfElement, path);\n\n        if(payload !== undefined && payload !== null) {\n            this.sendPostMessage({\n                type: payload.type, \n                process: payload.process,\n                activity: payload.activity, \n                control: payload.control, \n                valueHash: payload.valueHash,\n                path: payload.wfPath.map(this.getName)\n            });\n        }\n    }\n\n    getPath(event: {composedPath(event: object)}) {\n        return event.composedPath(event);\n    }\n\n    private sendPostMessage(message: object) {\n        const msg: object = {...message, timestamp:Date.now()};\n\n        console.log(\"ANALYTICS\", msg);\n        window.postMessage(msg, \"*\");\n    }\n\n    private getName(item: HTMLElement & {id: string, page: {name: string}}): string {\n        if(item.id != null)\n            return item.id;\n\n        if(item.page !== null && item.page.name !== null)\n            return item.page.name;\n\n        return \"\";\n    }\n\n    private createPayload(actType: string, wfElement: HTMLElement, path: HTMLElement[]){\n        const notFound = -1;\n\n        const p = path.filter(i => i.nodeName !== null && i.nodeName.indexOf(\"document-fragment\") === notFound);\n        const wfPage = p.find(i => i.localName === \"polaris-workflow\");\n\n        if(wfPage === null)\n            return null;\n\n        const wfPageElement = <HTMLPolarisWorkflowElement> wfPage;\n            \n        const activity = wfPageElement.ctx.wf.activity; \n        const wfPath = p.slice(0, p.indexOf(wfPage) + 1)\n\n        if(activity.name === undefined || activity.name === null)\n            return null;\n\n        const process = wfPageElement.ctx.wf.process.name;\n    \n        const act = activity.name;\n        const control = wfElement.id;\n        const valueHash = this.getHashCode(wfElement[\"value\"]);\n\n        return { \"type\": actType, process, activity: act, control, valueHash, wfPath};        \n    }\n\n    private getHashCode(str: string): number {\n        const startIndex = 0;\n        const hashLength = 31;\n\n        let hash = startIndex\n        for (let i = startIndex; i < str.length; i = i + 1)\n            hash = Math.imul(hashLength, hash) + str.charCodeAt(i)\n\n        return hash;\n    }\n}","import { Component, Listen } from \"@stencil/core\";\nimport { AnalyticsService } from \"../../services/analytics.service\";\n\n@Component({\n    tag: \"polaris-analytics\"\n  })\n  export class PolarisAnalytics {   \n    static lastPath: HTMLElement[] = [null];\n    static analyticsService: AnalyticsService = new AnalyticsService();\n\n    @Listen('click', { target: 'document' })\n    async analyticsHandler(event: Event) {\n        const path = PolarisAnalytics.analyticsService.getPath(event);\n\n        if(PolarisAnalytics.lastPath[0] === path[0])\n          return;\n \n        PolarisAnalytics.lastPath = path;\n\n        const wfElement =  path.find((i: HTMLElement) => i[\"wf-Workflow\"] !== undefined);\n\n        if(!wfElement) \n          return;\n          \n        path[0].addEventListener(\"blur\", this.onBlur);        \n        PolarisAnalytics.analyticsService.send(\"click\", path);\n    }    \n\n    @Listen('wfMessage', { target: 'document' })\n    wfMessage(event: Event){\n      PolarisAnalytics.analyticsService.sendMessage(event);\n    }\n\n    onBlur(event: Event) {\n        PolarisAnalytics.analyticsService.send(\"blur\", PolarisAnalytics.lastPath);\n        event.target.removeEventListener(\"blur\", this.onBlur);\n    }\n  }","import { Endpoint } from \"../model/endpoint.model\";\nimport { Context } from \"../model/context.model\";\n\nexport class HttpService {\n    private notFound: number = -1;\n    private startIndex: number = 0;\n    private settingOffset: number = 2;\n    private clientError: number = 400;\n    private unAuthorizedError: number = 401;\n\n    constructor(private ctx: Context) { }\n\n    async fetch(endpoint: Endpoint) {\n        try {\n            this.ctx.page.sendMessage({type: \"START_LOADING\"});\n            const response = await fetch(this.resolveSetting(endpoint.url), this.getConfig(endpoint));\n            \n            if(response.status >= this.clientError) {\n                const error = await response.json();\n\n                if(response.status >= this.unAuthorizedError)\n                    this.ctx.page.sendMessage({type: \"UN_AUTHORIZED\", metadata: { endpoint, error}});  \n\n                throw {\n                    code: response.status,\n                    message: response.statusText,\n                    error: error\n                };\n            }\n\n            return await response.json();\n        }\n        finally {\n            setTimeout(() => this.ctx.page.sendMessage({type: \"END_LOADING\"}));\n        }\n    }\n\n    private getConfig(endpoint: Endpoint): object{\n        const config =  {\n            method: endpoint.method,\n            mode: 'cors',\n            headers: Object.apply({\"Content-Type\": \"application/json\"}, endpoint.headers),\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: endpoint.body !== null ? JSON.stringify(endpoint.body) : null\n        };\n        \n        return config;\n    }\n\n    private resolveSetting(val: string, counter: number = this.startIndex) {\n        if(counter > this.settingOffset)\n            return val;\n            \n        const matches = val.match(/\\[[\\w|_]+\\]/g);\n\n        if(matches === null)\n            return val;\n\n        let result = matches.reduce(this.replace.bind(this) , val);\n\n        if(result.indexOf('[') > this.notFound) \n            result = this.resolveSetting(result, counter + 1);\n\n        return result;\n    }\n\n    private replace(prev: string, next: string): string {\n        let replacement:string = this.ctx.config.getSetting(next);\n        \n        if(replacement !== null && replacement.indexOf('[SELF]') > this.notFound) \n           return replacement.replace('[SELF]', prev.replace(next, ''));\n\n        return prev.replace(next, replacement);\n    }\n}","export function currencyFormat(value: number, [locale, currency]: [string, string]) {\n    const formatter = new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency: currency,\n    });\n      \n    return formatter.format(+value);\n}","import { currencyFormat } from \"./currency-format.pipe\";\n\nexport class PipeFactory {\n    currencyFormat: object = currencyFormat;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { PipeFactory } from \"../pipes/factory.pipe\";\nimport { ConfigService } from \"./config.service\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport class ModelService {\n    model: object = {};\n    sessionId: string = uuidv4().replaceAll('-', 'R');\n    pipes: PipeFactory = new PipeFactory();\n\n    constructor(private config: ConfigService) {}\n\n    getValue(key: string, model: object = this.model) {       \n        if(key.indexOf('[') === 0 || key.indexOf(']') === key.length - 1) \n          return this.config.getSetting(key);\n\n        const val = key.split(\".\").reduce((total, currentElement) => total != null ? total[currentElement]: undefined, {...model});\n        \n       if(key.match(/([a-z|A-Z]+\\.[a-z|A-Z]+)+/g) === null && val === undefined) \n          return key;\n\n        return val;\n    }\n\n    getInterpolatedValue(value: string) {   \n      if(value === undefined || value === null)\n        return value;\n  \n      const myRegexp = /\\{\\{\\[*(?:(\\w|\\.|\\||-)+)\\]*\\}\\}/g;\n      const match = value.match(myRegexp);\n      \n      if(match === null || match.length === 0)\n        return value;\n  \n      return match.reduce((prev, curr) => this.replaceAll(prev, curr), value);\n    }\n  \n\n    setValue(key: string, val: string | number | object) {   \n        if(key.indexOf('[') === 0 || key.indexOf(']') === key.length - 1) \n          this.config.addSetting(key, val);\n        else\n          this.model = this.merge(this.model, key, val);\n    }\n\n    save() {        \n      sessionStorage.setItem(this.sessionId, JSON.stringify(this.model));        \n    }\n\n    load() {        \n      const value = sessionStorage.getItem(this.sessionId);  \n      this.clearCache();\n      \n      if(value === null)\n          return;\n      \n      this.model =  JSON.parse(value);\n    }\n\n    clearCache() {\n      sessionStorage.clear();\n    }\n\n    private merge(model: object, name: string, value: string | number | object) {\n        if(name === null)\n          return;\n          \n        let newModel = {...model};\n      \n        name\n          .split(\".\")  \n          .reduce((total, current, index, arr) =>{\n            total[current] = index === arr.length - 1 ? value : {...total[current]};\n            return total[current];\n          }, newModel);\n      \n        return newModel;\n    }\n\n    private replaceAll(value: string, key: string) {\n      const padding = 2;\n      const startIndex = 2;\n      const firstIndex = 0;\n      const secondIndex = 1;\n\n      const expr = key.substring(padding, key.length - padding);\n      const values = expr.split('|');\n      const params = values.slice(startIndex);\n      let newValue = this.getValue(values[firstIndex]);\n\n      if(values != null && values.length > 1 && this.pipes[values[secondIndex]] != null)\n        newValue = this.pipes[values[secondIndex]](newValue, params);\n      \n      return value.replace(key, newValue);\n    }\n  \n}","export class ConfigService {\n    private settings: object = {};\n\n    getSetting(key: string) {\n        return this.settings[key];\n    }\n\n    addSetting(key: string, setting: object | string | number) {\n        if(key.indexOf('[') === -1)\n            key = `[${key}]`;\n\n        this.settings[key] = setting;\n    }\n}","import { Context } from \"../model/context.model\";\nimport { Activity } from \"./activity\";\n\nexport abstract class BaseActivity implements Activity {\n    name: string;\n    \"type\": string;\n    next:string;\n    ctx: Context;\n\n    abstract execute(): Promise<boolean>;\n\n    gotoNext() {\n        if(this.next !== undefined && this.ctx !== undefined)\n            this.ctx.wf.goto(this.next);\n    }\n}","import { BaseActivity } from \"./base.activity\";\n\nexport class RedirectActivity extends BaseActivity {\n    name: string = \"redirect\";\n    \"type\": string = \"redirect-activity\";\n    location?: string;\n       \n    async execute(): Promise<boolean> {\n        this.ctx.model.save();\n        \n        const params = `${this.ctx.wf.process?.name}-${this.next}-${this.ctx.model.sessionId}`;\n        window.location.href = `${this.location}?returnUrl=${params}`;    \n        return true;\n    }\n}","import { BaseActivity } from \"./base.activity\";\n\nexport class FinishActivity extends BaseActivity {\n    name: string = \"finish\";\n    \"type\": string = \"finish-activity\";\n       \n    async execute(): Promise<boolean> {\n        if(this.ctx.wf.stack.length === 0) {\n            this.gotoNext();\n\n            return true;\n        }\n\n        const ipc = this.ctx.wf.stack.pop();\n        await this.ctx.wf.setProcess(ipc.process, ipc.activity);\n            \n        return true;\n    }\n}","import { BaseActivity } from \"./base.activity\";\n\nexport class IPCActivity extends BaseActivity {\n    name: string = \"ipc\";\n    \"type\": string = \"ipc-activity\";\n    process: string; \n       \n    async execute(): Promise<boolean> {\n        if(this.process !== null && this.process.length > 0) {\n            this.ctx.wf.stack.push({\n                process: this.ctx.wf.process.name,\n                activity: this.next\n            });\n          \n            await this.ctx.wf.setProcess(this.ctx.model.getInterpolatedValue(this.process), 'start', this.next !== undefined ? false : true);\n        }\n            \n        return true;\n    }\n}","import { Context } from \"../model/context.model\";\nimport { BaseActivity } from \"./base.activity\";\n\nexport class CodeActivity extends BaseActivity {\n    name: string = \"code\";\n    \"type\": string = \"code-activity\";\n    expression: string;\n       \n    async execute(): Promise<boolean> {\n        this.evaluate(this.expression, this.ctx); \n        this.gotoNext();\n            \n        return true;\n    }\n\n    evaluate(expression: string, ctx: Context) {\n        const f =  new Function('ctx', expression);        \n        return f(ctx);                \n    }\n}","import { Activity } from \"./activity\";\nimport { Context } from \"../model/context.model\";\nimport { Control } from \"../model/control.model\";\n\nexport class PageActivity implements Activity {\n    name: string = \"start\";\n    \"type\": string = \"page-activity\";\n    \n    ctx: Context;\n    controls: Control[];\n\n    async execute(): Promise<boolean> {\n        this.ctx.page.controls = this.controls;    \n        return true;\n    }\n}\n","import { Activity } from \"./activity\";\n\nexport class NullActivity implements Activity {\n    name: string = \"undefined\";\n    \"type\": string = \"null-activity\";\n\n    async execute(): Promise<boolean> {\n        return new Promise((_resolve, reject) => reject(\"NULL Activity\"));\n    }\n}\n","import { HttpService } from \"../services/http.service\";\nimport { ApiEndpoint } from \"../model/api-endpoint.model\";\nimport { BaseActivity } from \"./base.activity\";\n\nexport class ApiActivity extends BaseActivity {\n    name: string = \"start\";\n    \"type\": string = \"api-activity\";\n    endpoints: ApiEndpoint[];\n\n     async execute(): Promise<boolean> {  \n        await this.callEndpoints();\n        this.gotoNext();\n        return true;\n    }\n\n    private async callEndpoints(): Promise<boolean> {\n        for(const endpoint of this.endpoints) {\n            endpoint.body = this.getBody(endpoint);\n            \n            await this.callEndpoint(this.ctx.http, endpoint);\n        }\n\n        return true;\n    }\n\n    private async callEndpoint(http: HttpService, endpoint: ApiEndpoint) {\n        return http.fetch(endpoint)\n                   .then(data => this.setModel(endpoint, data));\n    }\n\n    private getBody(endpoint: ApiEndpoint) {\n        if(!this.hasModel() || endpoint.method.toUpperCase() === \"GET\" || endpoint.method.toUpperCase() === \"DELETE\")\n            return null;\n\n        const model = this.ctx.model;\n        const mappings = endpoint.mappings;\n\n        let body = {};\n        mappings\n            .filter(m => m.direction === 'out' || m.direction === 'inout')\n            .forEach(m => Object.assign(body, {[m.remote]: model.getValue(m.client)}));\n        \n        return body;\n    }\n\n    private setModel(endpoint: ApiEndpoint, data: object) {\n        if(!this.hasModel())\n            return;\n\n        const model = this.ctx.model;\n        const mappings = endpoint.mappings;\n\n        if(mappings === null || mappings.length === 0)             \n            return Object.keys(data).forEach(k => model.setValue(k, data[k]));  \n        \n        mappings\n            .filter(m => m.direction === 'in' || m.direction === 'inout')\n            .forEach(m => model.setValue(m.client, model.getValue(m.remote, data)));\n    }\n\n    private hasModel(): boolean {\n        return this.ctx !== undefined \n            && this.ctx !== null \n            && this.ctx.model !== undefined\n            && this.ctx.model !== null;\n    }\n}\n\n\n","import { BaseActivity } from \"./base.activity\";\n\nexport class AssignActivity extends BaseActivity {\n    name: string = \"assign\";\n    \"type\": string = \"assign-activity\";\n    key: string;\n    value: string | null | undefined;\n    \n    async execute(): Promise<boolean> {\n        const value = this.ctx.model.getInterpolatedValue(this.value);            \n                \n        this.ctx.model.setValue(this.key, value);         \n        this.gotoNext();\n            \n        return true;\n    }\n}","import { CodeActivity } from './code.activity';\nimport { Context } from \"../model/context.model\";\n\nexport class DecisionActivity extends CodeActivity {\n    name: string = \"decision\";\n    \"type\": string = \"decision-activity\";\n\n    ctx: Context;\n    expression: string;\n    trueAction: string;\n    falseAction: string;    \n    \n    async execute(): Promise<boolean> {\n        const exp  = `return ${this.ctx.model.getInterpolatedValue(this.expression)};`;\n           \n        if(this.evaluate(exp, this.ctx)) \n            this.ctx.wf.goto(this.trueAction);\n        else\n            this.ctx.wf.goto(this.falseAction);\n\n        return true;\n    }\n}","import { CodeActivity } from \"./code.activity\";\nimport { Context } from \"../model/context.model\";\nimport { Rule } from \"../model/rule.model\";\n\nexport class SwitchActivity extends CodeActivity {\n    name: string = \"switch\";\n    \"type\": string = \"switch-activity\";\n\n    ctx: Context;\n    rules: Rule[];\n    \n    async execute(): Promise<boolean> {\n       if(this.rules === null || this.rules === undefined)\n            throw new Error(`No valid rule in ${this.name} found !!`);\n\n       for(let rule of this.rules) {\n           const expression  = `return ${this.ctx.model.getInterpolatedValue(rule.expression)};`;\n           \n           if(this.evaluate(expression, this.ctx)) {\n              this.gotoNext();\n              return true;\n           }\n       }\n\n       throw new Error(`No valid rule in ${this.name} found !!`);\n    }\n}","import { RedirectActivity } from './redirect.activity';\nimport { FinishActivity } from './finish.activity';\nimport { IPCActivity } from './ipc.activity';\nimport { CodeActivity } from './code.activity';\nimport { Activity } from \"./activity\";\nimport { PageActivity } from \"./page.activity\";\nimport { NullActivity } from \"./null.activity\";\nimport { Context } from \"../model/context.model\";\nimport { ApiActivity } from \"./api.activity\";\nimport { AssignActivity } from \"./assign.activity\";\nimport { DecisionActivity } from \"./decision.activity\";\nimport { SwitchActivity } from './switch.activity';\n\nexport class ActivityFactory {\n    static activities: Activity[] = [\n        new NullActivity(),\n        new PageActivity(),\n        new ApiActivity(),\n        new AssignActivity(),\n        new CodeActivity(),\n        new DecisionActivity(),\n        new IPCActivity(),\n        new FinishActivity(),\n        new RedirectActivity(),\n        new SwitchActivity()\n    ];\n\n    static create(config: object, ctx: Context): Activity {\n        if (config === null || config === undefined || config[\"type\"] === undefined || config[\"type\"] === null)\n            return new NullActivity();\n\n        let act = ActivityFactory.activities.find(a => a[\"type\"] === config[\"type\"]);\n\n        if (act == null)\n            return new NullActivity();\n\n        return Object.assign(act, config, { ctx });\n    }\n\n    static add(activity: Activity, replace: boolean = false) {\n        const notFound = -1;\n        const deleteCount = 1;\n\n        let index = ActivityFactory.activities.findIndex(a => a.type === activity.type);\n\n        if (index > notFound && !replace)\n            return;\n\n        if (index > notFound)\n            ActivityFactory.activities.splice(index, deleteCount);\n        \n        ActivityFactory.activities.push(activity); \n    }\n}\n","import { ActivityFactory } from \"../activities/activity-factory\";\n\nimport { Context } from \"../model/context.model\";\nimport { Process } from \"../model/process.model\";\nimport { Activity } from \"../activities/activity\";\nimport { WorkflowLoader } from \"../utilities/workflow-loader.utility\";\n\nexport interface WFStack {\n    process: string;\n    activity: string;\n}\n\nexport class WorkflowService {\n    loader: WorkflowLoader;\n\n    process: Process | null;\n    activity: Activity;\n    \n    stack: WFStack[] = [];\n\n    constructor(private ctx: Context){}\n    \n    async setProcess(process: string | Process, next: string = \"start\", clearStack: boolean = true): Promise<void> {\n        try {\n            if(clearStack)\n                this.stack = [];\n                \n            if(typeof process === \"string\" && this.loader != null)              \n                process = await this.loader.load(process);\n            \n            if(typeof process === \"string\")\n                return Promise.reject(\"Workflow not found\");\n\n            this.process = process; \n            this.activity = null;\n\n            this.goto(next);\n\n            this.ctx.page.sendMessage({type: \"PROCESS_CHANGED\", metadata: {stack: this.stack}});\n        }\n        catch(err) {\n            if(err) {\n                console.error(err);\n                this.ctx.page.sendMessage({type: \"ERROR\", description: err.message, metadata: err});\n            }\n        }\n    }\n\n    goto(name: string) {\n        setTimeout(this.tryNext.bind(this, name));    \n    }\n\n    private async tryNext(name: string) {       \n        try {        \n            this.ctx.page.sendMessage({type: \"WORKFLOW_CHANGING\"});\n            await this.next(name);\n            this.ctx.page.sendMessage({type: \"WORKFLOW_CHANGED\"});\n        }\n        catch(err) {\n            this.ctx.page.sendMessage({type: \"ERROR\", description: err?.message, metadata: err});\n        }        \n    }\n\n    private async next(name: string) {\n        if(!this.isValidProcess())\n            return null;\n            \n        if(this.ctx.wf.activity?.type === \"page-activity\" && !this.ctx.validator.validate(this.ctx))             \n            return null;\n            \n        let newActivity = this.process\n                              .activities\n                              .find(a => a.name === name);                \n                            \n        if(!newActivity)\n            throw new Error(`Activity ${name} not found`);\n\n        this.activity = newActivity;\n\n        \n        return ActivityFactory.create(this.activity, this.ctx)\n                                    .execute();\n    }\n\n    private isValidProcess(): boolean{\n        return typeof this.process !== \"string\" \n            &&  this.process !== undefined \n            && this.process !== null \n            && this.process.activities !== undefined \n            && this.process.activities !== null;\n    }\n}","import { Context } from \"../model/context.model\";\nimport { Control } from \"../model/control.model\";\n\nexport abstract class Validator {\n    constructor(public name: string) { }\n    abstract validate(context: Context, control: Control, config: object): boolean;\n\n    setError(control: Control, error: boolean, message?: string) {\n        control.error = error;\n        control.errorMessage = error ? message : null;\n\n        if(control.el !== null) {\n            control.el.setAttribute(\"error\", control.error === true  ? \"true\" : \"false\");\n            control.el.setAttribute(\"errorMessage\", control.errorMessage);\n        }\n\n        if(control.el.nextSibling[\"attributes\"][\"wf-error\"])\n            control.el.nextSibling.textContent = control.errorMessage;\n    }\n}","import { Context } from '../model/Context.model';\nimport { Validator } from './validator';\nimport { Control } from '../model/control.model';\n\nexport interface RequiredValidatorConfig {\n    name: string;\n    message: string;\n}\n\nexport class RequiredValidator extends Validator {\n    validate(context: Context, control: Control, config: RequiredValidatorConfig): boolean {\n        const value = context.model.getValue(control.id);\n        const isEmpty = value === null || value === undefined || value.length === 0;\n        super.setError(control, isEmpty, config.message);\n              \n        return !isEmpty;\n    }\n}","import { Context } from '../model/Context.model';\nimport { Validator } from './validator';\nimport { Control } from '../model/control.model';\n\nexport interface RegexValidatorConfig {\n    name: string;\n    message: string;\n    expression: string;\n}\n\nexport class RegexValidator extends Validator {\n    validate(context: Context, control: Control, config: RegexValidatorConfig): boolean {\n        const value = context.model.getValue(control.id);\n        const regex = new RegExp(config.expression, 'g');       \n        const result = regex.exec(value);       \n        const isValid = result != null ? true : false;\n\n        super.setError(control, !isValid, config.message);\n              \n        return isValid;\n    }\n}","import { Context } from '../model/Context.model';\nimport { Validator } from './validator';\nimport { Control } from '../model/control.model';\n\nexport interface RangeValidatorConfig {\n    name: string;\n    message: string;\n    min: number;\n    max: number;\n}\n\nexport class RangeValidator extends Validator {\n    validate(context: Context, control: Control, config: RangeValidatorConfig): boolean {\n        const value = +context.model.getValue(control.id);\n        const isValid = value >= config.min && value <= config.max;\n\n        super.setError(control, !isValid, config.message);\n              \n        return isValid;\n    }\n}","import { Control } from './../model/control.model';\nimport { Validator } from \"../validators/validator\";\nimport { RequiredValidator } from \"../validators/required.validator\";\nimport { Context } from \"../model/context.model\";\nimport { RegexValidator } from '../validators/regex.validator';\nimport { RangeValidator } from '../validators/range.validator';\n\nexport class ValidatorService {\n    private validators: Validator[] = [\n        new RequiredValidator(\"required\"),\n        new RegexValidator(\"regex\"),\n        new RangeValidator(\"range\")\n    ];\n    \n    validate(ctx: Context): boolean {                                 \n        if(ctx.page === undefined || ctx.page === null || ctx.page.controls === undefined || ctx.page.controls === null)          \n            return true;\n        \n        let isValid = true;\n\n        for(const ctrl of ctx.page.controls) \n            isValid = this.validateControl(ctx, ctrl) && isValid;\n       \n        return isValid;\n    }  \n\n    addValidator(validator: Validator) {\n        const val = this.validators.find(v => v.name === validator.name);\n\n        if(!val)\n            this.validators.push(validator);\n    }\n    \n    private validateControl(ctx: Context, control: Control): boolean {         \n        if(control === undefined || control === null)\n            return true;\n\n        let isValid = true;\n            \n        for(const index in control.controls)\n            isValid =  this.validateControl(ctx, control.controls[index]) && isValid;\n       \n        if(control.validators !== null && control.validators !== undefined && control.validators.length > 0) {\n            for(const config of control.validators) {                \n                const validator = this.validators.find(v => v.name === config.name);\n\n                if(!validator)\n                    continue;\n                \n                if(!validator.validate(ctx, control, config)) {                \n                    isValid =  false;    \n                    this.sendErrorMsg(ctx, validator, control);                    \n                    break;\n                }\n            }            \n        }\n            \n        return isValid;\n    }\n\n    private sendErrorMsg(ctx: Context, validator: Validator, control: Control) {\n        ctx.page.sendMessage({\n            type: \"VALIDATION_ERROR\",\n            description: control.errorMessage,\n            metadata: {\n                validator: validator.name,\n                control: control.id\n            }\n        });\n    }\n}","import { Context } from \"../model/context.model\";\nimport { Page } from \"../model/page.model\";\nimport { Control } from \"../model/control.model\";\n\nexport class PageBuilder {\n    onInput: (element: HTMLElement & Control) => void;\n    \n    constructor(private ctx: Context & Page){}\n\n    build(parent: HTMLElement, onInput: (element: HTMLElement & Control) => void){\n        this.onInput = onInput;\n\n        this.clearPage(parent);\n        \n        this.ctx.controls.forEach(this.addComponent.bind(this, parent));\n    }\n\n    clearPage(parent: HTMLElement){\n        for(let i = parent.childNodes.length - 1; i >= 0; i--) \n            parent.removeChild(parent.childNodes[i]);    \n    }\n\n    private addComponent(parent: HTMLElement, control: Control) {\n        let newEl: HTMLElement & Control;\n\n        if(control.tag === \"polaris-workflow\") \n            newEl = this.createWorkflowElement(control); \n        else \n            newEl = this.createElement(control); \n        \n        parent.appendChild(newEl);\n        this.addErrorLabel(newEl);\n    }\n\n    private createWorkflowElement(control: Control): HTMLElement & Control{\n        const el = document.createElement(control.tag) as HTMLPolarisWorkflowElement;\n        const newEl = Object.assign(el, control);               \n        newEl.setServices(this.ctx);\n        \n        return newEl;\n    }\n\n    private createElement(control: Control): HTMLElement & Control {        \n        const el = document.createElement(control.tag);\n        const options = {\n            \"wf-Workflow\": \"\",\n            \"ctx\": this.ctx \n        };\n\n        const newEl = Object.assign(el, control, options);\n        control.el = newEl;\n        \n        this.bind(newEl);\n        this.bindCaption(newEl, control);\n        control.controls?.forEach(this.addComponent.bind(this, newEl));\n        \n        return newEl;\n    }\n\n    private bind(newEl: HTMLElement & Control){\n        if(!newEl.id || newEl.value === undefined)\n            return;\n\n        const newValue = this.ctx.model.getValue(newEl.id);\n\n        if(newValue !== undefined)\n            newEl.value = newValue;\n        \n        this.ctx.model.setValue(newEl.id, newEl.value);\n        newEl.oninput = this.onInput.bind(this, newEl);\n    }\n\n    private bindCaption(newEl: HTMLElement, control: Control) {\n        this.interpolate('caption', newEl, control);\n        this.interpolate('textContent', newEl, control);\n        this.interpolate('innerHTML', newEl, control);\n    }\n\n    private interpolate(prop: string, newEl: HTMLElement, control: Control) {\n        if(!newEl[prop])\n            return;\n\n        newEl[prop] = this.ctx.model.getInterpolatedValue(control[prop]||newEl[prop]);\n    }\n\n    private addErrorLabel(newEl: HTMLElement & Control) {\n        if(!newEl.validators)\n            return;\n\n        const errLabel = document.createElement(\"span\");\n        errLabel.setAttribute(\"wf-error\", \"error\");\n\n        newEl.parentNode.appendChild(errLabel);\n    }\n}","import { Process } from \"../model/process.model\";\nimport { HttpService } from \"../services/http.service\";\n\nexport interface WorkflowLoader {\n    load(processName: string): Promise<Process>;\n} \n\nexport class HttpWorkflowLoader implements WorkflowLoader {\n    constructor(private http: HttpService) { }\n    \n    async load(processName: string): Promise<Process> {\n        return this.http.fetch({url: `[WF]/${processName}`, method: 'get'});\n    }\n}","import { Component, Prop, Element, Watch, Method, Event, EventEmitter } from \"@stencil/core\";\n\nimport { Control } from \"../../model/control.model\";\n\nimport { Page } from \"../../model/page.model\";\nimport { Context } from \"../../model/context.model\";\nimport { HttpService } from \"../../services/http.service\";\nimport { ModelService } from \"../../services/model.service\";\nimport { ConfigService } from \"../../services/config.service\";\nimport { WorkflowService } from \"../../services/workflow.service\";\nimport { ValidatorService } from \"../../services/validator.service\";\nimport { Message } from \"../../model/message.model\";\nimport { PageBuilder } from \"../../utilities/page-builder.utility\";\nimport { WorkflowLoader, HttpWorkflowLoader } from \"../../utilities/workflow-loader.utility\";\nimport { Activity } from \"../../activities/activity\";\nimport { ActivityFactory } from \"../../activities/activity-factory\";\nimport { Validator } from \"../../validators/validator\";\nimport { Process } from \"../../model/process.model\";\n\n@Component({\n    tag: \"polaris-workflow\",\n    shadow: false\n  })\n  export class PolarisWorkflow implements Control {    \n    private _components: Control[] = [];\n    private _loader: WorkflowLoader;\n    private _isConnected: boolean;\n    \n    @Prop() parent: Context;\n\n    @Prop() tag: string;\n    @Prop() page: Page = this;\n    @Prop() ctx: Context = this;\n    @Prop() value?: string|object|null|undefined;  \n\n    @Prop() url: string;\n    @Prop() process: string|Process;\n    @Prop() activity: string;\n    @Prop() sessionId: string;\n\n    http: HttpService = new HttpService(this.ctx);\n    config: ConfigService = new ConfigService();\n    model: ModelService = new ModelService(this.ctx.config);\n    wf: WorkflowService = new WorkflowService(this.ctx);\n    validator: ValidatorService = new ValidatorService();\n    \n    @Element() el: HTMLElement;\n    \n    @Watch(\"process\")\n    async processChangeHandler() {        \n        await this.load(this.process, this.activity, this.sessionId);\n    }\n\n    @Event()\n    wfMessage: EventEmitter;\n\n    get controls(){return this._components; }\n    set controls(val: Control[]) { \n        this._components = val; \n        this._render(); \n    }\n\n    @Method()\n    async setServices(ctx: Context) {               \n        this.model = ctx.model;\n        this.http = ctx.http;\n        this.config = ctx.config;        \n        this.validator = ctx.validator; \n    }\n    \n    @Method()\n    async load(process: string | Process, next: string = \"start\", sessionId: string = ''): Promise<void> {\n        if(sessionId != null && sessionId.length > 0) {\n            this.ctx.model.sessionId = sessionId;\n            this.ctx.model.load();\n        }\n        \n        await this.wf.setProcess(process, next);       \n    }\n\n    @Method()\n    async addActivity(activity: Activity, replace: boolean = false): Promise<void> {\n        ActivityFactory.add(activity, replace);\n\n        return Promise.resolve();\n    }\n\n    @Method()\n    async addValidator(validator: Validator) {\n        this.validator.addValidator(validator);\n    }\n\n    sendMessage(message: Message): void {\n        const metaData = {\n            process: this.wf.process?.name,\n            activity: this.wf.activity?.name,\n            activityType: this.wf.activity?.type,\n            timestamp: Date.now()\n        };\n\n        if(this._isConnected === true) \n            this.wfMessage.emit({...message, ...metaData});\n    }\n\n    disconnectedCallback() {\n        this._isConnected = false;\n    }\n\n    connectedCallback() {\n        this._isConnected = true;\n    }\n\n    async componentWillLoad() { \n        if(this.url != null) {\n            this.config.addSetting(\"[settingsUrl]\", this.url);\n            const settings = await this.http.fetch({method: \"GET\", url: this.url});\n            Object.keys(settings).forEach(k => this.config.addSetting(k, settings[k]));\n        }\n\n        if(this._loader === null || this._loader === undefined) {\n            this._loader = new HttpWorkflowLoader(this.http);\n            this.wf.loader = this._loader;\n        }\n\n        if(this.parent != null)\n            await this.setServices(this.parent);\n        \n        if(this.process != null)\n            await this.load(this.process, this.activity, this.sessionId);\n    }\n\n    private onInput(newEl: HTMLElement & Control) {\n        this.model.setValue(newEl.id, newEl.value);\n\n        if(newEl.hasAttribute('error'))\n            this.validator.validate(this);\n    }\n\n    private _render() {   \n        const builder = new PageBuilder(this);\n        builder.build(this.el, this.onInput.bind(this));\n    }\n  }"]}