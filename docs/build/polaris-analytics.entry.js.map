{"file":"polaris-analytics.entry.esm.js","mappings":"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","names":[],"sources":["./src/services/analytics.service.ts","./src/components/polaris-analytics/polaris-analytics.tsx"],"sourcesContent":["export class AnalyticsService {\n    sendMessage(event: object) {\n        this.sendPostMessage(event[\"detail\"]);\n    }\n\n    send(actType: string, path: HTMLElement[]) {\n        const wfElement = path.find(i => i[\"wf-Workflow\"] !== undefined);\n        \n        if(!wfElement)\n            return;\n\n        const payload = this.createPayload(actType, wfElement, path);\n\n        if(payload !== undefined && payload !== null) {\n            this.sendPostMessage({\n                type: payload.type, \n                process: payload.process,\n                activity: payload.activity, \n                control: payload.control, \n                valueHash: payload.valueHash,\n                path: payload.wfPath.map(this.getName)\n            });\n        }\n    }\n\n    getPath(event: {composedPath(event: object)}) {\n        return event.composedPath(event);\n    }\n\n    private sendPostMessage(message: object) {\n        const msg: object = {...message, timestamp:Date.now()};\n\n        console.log(\"ANALYTICS\", msg);\n        window.postMessage(msg, \"*\");\n    }\n\n    private getName(item: HTMLElement & {id: string, page: {name: string}}): string {\n        if(item.id != null)\n            return item.id;\n\n        if(item.page !== null && item.page.name !== null)\n            return item.page.name;\n\n        return \"\";\n    }\n\n    private createPayload(actType: string, wfElement: HTMLElement, path: HTMLElement[]){\n        const notFound = -1;\n\n        if(path == null || path == undefined)\n            return null;\n\n        const p = path.filter(i => i.nodeName !== undefined && i.nodeName !== null && i.nodeName.indexOf(\"document-fragment\") === notFound);\n        const wfPage = p.find(i => i.localName === \"polaris-workflow\");\n\n        if(wfPage === null)\n            return null;\n\n        const wfPageElement = <HTMLPolarisWorkflowElement> wfPage;\n\n        const activity = wfPageElement.ctx.wf.activity; \n        const wfPath = p.slice(0, p.indexOf(wfPage) + 1);\n\n        if(activity.name === undefined || activity.name === null)\n            return null;\n\n        const process = wfPageElement.ctx.wf.process.name;\n    \n        const act = activity.name;\n        const control = wfElement.id;\n        const valueHash = this.getHashCode(wfElement[\"value\"]);\n\n        return { \"type\": actType, process, activity: act, control, valueHash, wfPath};        \n    }\n\n    private getHashCode(str: string): number {\n        if(str === undefined || str === null)\n            return 0;\n            \n        const startIndex = 0;\n        const hashLength = 31;\n\n        let hash = startIndex\n        for (let i = startIndex; i < str.length; i = i + 1)\n            hash = Math.imul(hashLength, hash) + str.charCodeAt(i)\n\n        return hash;\n    }\n}","import { Component, Listen } from \"@stencil/core\";\nimport { AnalyticsService } from \"../../services/analytics.service\";\n\n@Component({\n    tag: \"polaris-analytics\"\n  })\n  export class PolarisAnalytics {   \n    static lastPath: HTMLElement[] = [null];\n    static analyticsService: AnalyticsService = new AnalyticsService();\n\n    @Listen('click', { target: 'document' })\n    async analyticsHandler(event: Event) {\n        const path = PolarisAnalytics.analyticsService.getPath(event);\n\n        if(PolarisAnalytics.lastPath[0] === path[0])\n          return;\n \n        PolarisAnalytics.lastPath = path;\n\n        const wfElement =  path.find((i: HTMLElement) => i[\"wf-Workflow\"] !== undefined);\n\n        if(!wfElement) \n          return;\n          \n        path[0].addEventListener(\"blur\", this.onBlur);        \n        PolarisAnalytics.analyticsService.send(\"click\", path);\n    }    \n\n    @Listen('wfMessage', { target: 'document' })\n    wfMessage(event: Event){\n      PolarisAnalytics.analyticsService.sendMessage(event);\n    }\n\n    onBlur(event: Event) {\n        PolarisAnalytics.analyticsService.send(\"blur\", PolarisAnalytics.lastPath);\n        event.target.removeEventListener(\"blur\", this.onBlur);\n    }\n  }"],"version":3}